{"version":3,"file":"static/js/106.6a5d00ec.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nconst API_KEY = '6275ff62c216e0d575843f8efbbe5c76';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [activeTab, setActiveTab] = useState('');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovieDetails(null);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const fetchMovieCast = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n      setActiveTab('cast');\n    } catch (error) {\n      console.error('Error fetching movie cast:', error);\n      setCast([]);\n    }\n  };\n\n  const fetchMovieReviews = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      setReviews(response.data.results);\n      setActiveTab('reviews');\n    } catch (error) {\n      console.error('Error fetching movie reviews:', error);\n      setReviews([]);\n    }\n  };\n\n  const goBack = () => {\n    const previousPath = localStorage.getItem('previousPath') || '/';\n\n    const newPreviousPath = previousPath.replace(/\\?query=.*/, '');\n\n    localStorage.setItem('previousPath', newPreviousPath);\n\n    const isMoviesPage = previousPath.includes('/movies');\n    const isHomePage = previousPath === '/' || previousPath === '/movies';\n\n    if (isMoviesPage) {\n      navigate(newPreviousPath, { replace: true });\n    } else if (isHomePage) {\n      navigate(-1); \n    } else {\n      navigate('/');\n    }\n  };\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const {\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n    runtime,\n    poster_path,\n  } = movieDetails;\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : null;\n\n  return (\n    <div>\n      <div>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/movies\">Movies</Link>\n      </div>\n      <button onClick={goBack}>Go back</button>\n      <h2>{title}</h2>\n      {posterUrl && <img src={posterUrl} alt={`${title} Poster`} />}\n      <p>User Score: {vote_average * 10}%</p>\n      <p>Overview: {overview}</p>\n      <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n      <p>Release Date: {release_date}</p>\n      <p>Runtime: {runtime} minutes</p>\n      <h3>Additional information</h3>\n      <Link to=\"cast\" onClick={fetchMovieCast}>\n        Cast\n      </Link>\n      <Link to=\"reviews\" onClick={fetchMovieReviews}>\n        Reviews\n      </Link>\n      {activeTab === 'cast' && (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul>\n            {cast.map(actor => (\n              <li key={actor.id}>{actor.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {activeTab === 'reviews' && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","MovieDetails","movieId","useParams","navigate","useNavigate","movieDetails","setMovieDetails","useState","cast","setCast","reviews","setReviews","activeTab","setActiveTab","useEffect","async","response","axios","concat","data","error","console","fetchMovieDetails","_jsx","children","title","vote_average","overview","genres","release_date","runtime","poster_path","posterUrl","_jsxs","Link","to","onClick","goBack","previousPath","localStorage","getItem","newPreviousPath","replace","setItem","isMoviesPage","includes","isHomePage","src","alt","map","genre","name","join","results","actor","id","review","author","content"],"sourceRoot":""}